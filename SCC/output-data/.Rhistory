output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
output$years <- as.numeric(gsub("X","", rownames(output)))
output <- melt(output, id.vars = "years")
output$years <- as.numeric(output$years)
output$value <- as.numeric(output$value)
# Get Distribution within clusters
list_of_plots <- list()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$ngram %in% tmp,])
cs <- as.data.frame(rowSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
cs$words <- tmp$ngram
colnames(cs) <- c('rs', "ngram")
cs <- cs[order(cs$rs, decreasing = T),]
cs$rs <- round((cs$rs / sum(cs$rs) * 100),2)
#cs <- as.data.frame(cs[1,])
cs$clus <- i
cs$bigornot <- ""
for(row in 1:as.numeric(nrow(cs))){
if(cs$rs[row] > 5){cs$bigornot[row] <- as.character(cs$ngram[row])}
else{cs$bigornot[row] <- "small stuff"}
}
selection_words <- as.character(cs$ngram[cs$rs > 5])
colours <- brewer.pal(as.numeric(length(unique(cs$bigornot))), "Accent")
p <- ggplot(cs[order(cs$rs, decreasing = T),], aes(x = clus, y = rs, fill = bigornot)) +
geom_col() +
#geom_text(aes(clus, rs, label=paste0(bigram, rs)), data = cs[cs$bigram %in% selection_words,]) +
theme_minimal(base_size = 16) +
ggtitle(paste0("Cluster ", i, " with ", nrow(tmp), " bigrams")) +
theme(axis.ticks.x = element_blank()) +
guides(fill=guide_legend(title="Words > 5% and Other")) +
scale_fill_manual(values = colours)
list_of_plots[[i]] <- p
}
cols <- colorRampPalette(brewer.pal(12, "Set3"))
myPal <- cols(clusn)
main <- ggplot(output, aes(years, value, fill = variable)) +
geom_area() +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = myPal) +
theme(legend.position = "bottom",
legend.text=element_text(size=12),
legend.title = element_blank(),
#axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
legend.background = element_rect(fill="grey95",
size=0.5, linetype="solid", colour ="grey95")) +
guides(fill=guide_legend(title="Clusters", nrow=clusn,byrow=TRUE))
list_of_plots[[(clusn + 1)]] <- main
list_of_plots
} # outputs a list of plots, the last one is the cluster plot, the other ones are cluster structure plots
list_plots <- get_cluster(8)
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$ngram %in% tmp,])
cs <- as.data.frame(rowSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
cs$words <- tmp$ngram
colnames(cs) <- c('rs', "ngram")
cs <- cs[order(cs$rs, decreasing = T),]
cs$rs <- round((cs$rs / sum(cs$rs) * 100),2)
#cs <- as.data.frame(cs[1,])
cs$clus <- i
cs$bigornot <- ""
for(row in 1:as.numeric(nrow(cs))){
if(cs$rs[row] > 5){cs$bigornot[row] <- as.character(cs$ngram[row])}
else{cs$bigornot[row] <- "small stuff"}
}
selection_words <- as.character(cs$ngram[cs$rs > 5])
#colours <- brewer.pal(as.numeric(length(unique(cs$bigornot))), "Accent")
p <- ggplot(cs[order(cs$rs, decreasing = T),], aes(x = clus, y = rs, fill = bigornot)) +
geom_col() +
#geom_text(aes(clus, rs, label=paste0(bigram, rs)), data = cs[cs$bigram %in% selection_words,]) +
theme_minimal(base_size = 16) +
ggtitle(paste0("Cluster ", i, " with ", nrow(tmp), " bigrams")) +
theme(axis.ticks.x = element_blank()) +
guides(fill=guide_legend(title="Words > 5% and Other"))
list_of_plots[[i]] <- p
}
get_cluster <- function(clusn){
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
# Get Names
names_col <- c()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust$name[clust$cluster == i]
tmp <- which(colnames(clust_centroids) %in% tmp)
tmp <- clust_centroids[,c(tmp)]
tmp <- as.data.frame(t(tmp))
tmp$name <- rownames(tmp)
tmp <- melt(tmp, id.vars = "name")
tmp <- tmp[order(tmp$value, decreasing = T),]
tmp <- unique(as.character(tmp$name[1:12]))
tmp <- paste0(tmp, collapse = " | ")
names_col <- c(names_col, tmp)
}
#Get Frequency Distrubtion
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
output$years <- as.numeric(gsub("X","", rownames(output)))
output <- melt(output, id.vars = "years")
output$years <- as.numeric(output$years)
output$value <- as.numeric(output$value)
# Get Distribution within clusters
list_of_plots <- list()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$ngram %in% tmp,])
cs <- as.data.frame(rowSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
cs$words <- tmp$ngram
colnames(cs) <- c('rs', "ngram")
cs <- cs[order(cs$rs, decreasing = T),]
cs$rs <- round((cs$rs / sum(cs$rs) * 100),2)
#cs <- as.data.frame(cs[1,])
cs$clus <- i
cs$bigornot <- ""
for(row in 1:as.numeric(nrow(cs))){
if(cs$rs[row] > 5){cs$bigornot[row] <- as.character(cs$ngram[row])}
else{cs$bigornot[row] <- "small stuff"}
}
selection_words <- as.character(cs$ngram[cs$rs > 5])
#colours <- brewer.pal(as.numeric(length(unique(cs$bigornot))), "Accent")
p <- ggplot(cs[order(cs$rs, decreasing = T),], aes(x = clus, y = rs, fill = bigornot)) +
geom_col() +
#geom_text(aes(clus, rs, label=paste0(bigram, rs)), data = cs[cs$bigram %in% selection_words,]) +
theme_minimal(base_size = 16) +
ggtitle(paste0("Cluster ", i, " with ", nrow(tmp), " bigrams")) +
theme(axis.ticks.x = element_blank()) +
guides(fill=guide_legend(title="Words > 5% and Other"))
list_of_plots[[i]] <- p
}
cols <- colorRampPalette(brewer.pal(12, "Set3"))
myPal <- cols(clusn)
main <- ggplot(output, aes(years, value, fill = variable)) +
geom_area() +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = myPal) +
theme(legend.position = "bottom",
legend.text=element_text(size=12),
legend.title = element_blank(),
#axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
legend.background = element_rect(fill="grey95",
size=0.5, linetype="solid", colour ="grey95")) +
guides(fill=guide_legend(title="Clusters", nrow=clusn,byrow=TRUE))
list_of_plots[[(clusn + 1)]] <- main
list_of_plots
} # outputs a list of plots, the last one is the cluster plot, the other ones are cluster structure plots
list_plots <- get_cluster(8)
list_plots[[9]]
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
# Get Names
names_col <- c()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust$name[clust$cluster == i]
tmp <- which(colnames(clust_centroids) %in% tmp)
tmp <- clust_centroids[,c(tmp)]
tmp <- as.data.frame(t(tmp))
tmp$name <- rownames(tmp)
tmp <- melt(tmp, id.vars = "name")
tmp <- tmp[order(tmp$value, decreasing = T),]
tmp <- unique(as.character(tmp$name[1:12]))
tmp <- paste0(tmp, collapse = " | ")
names_col <- c(names_col, tmp)
}
#Get Frequency Distrubtion
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
output$years <- as.numeric(gsub("X","", rownames(output)))
output <- melt(output, id.vars = "years")
output$years <- as.numeric(output$years)
output$value <- as.numeric(output$value)
clusn = 9
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
# Get Names
names_col <- c()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust$name[clust$cluster == i]
tmp <- which(colnames(clust_centroids) %in% tmp)
tmp <- clust_centroids[,c(tmp)]
tmp <- as.data.frame(t(tmp))
tmp$name <- rownames(tmp)
tmp <- melt(tmp, id.vars = "name")
tmp <- tmp[order(tmp$value, decreasing = T),]
tmp <- unique(as.character(tmp$name[1:12]))
tmp <- paste0(tmp, collapse = " | ")
names_col <- c(names_col, tmp)
}
#Get Frequency Distrubtion
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
output$years <- as.numeric(gsub("X","", rownames(output)))
output <- melt(output, id.vars = "years")
output$years <- as.numeric(output$years)
output$value <- as.numeric(output$value)
ggplot(output, aes(years, value, fill = variable)) +
geom_area() +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = myPal) +
theme(legend.position = "bottom",
legend.text=element_text(size=12),
legend.title = element_blank(),
#axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
legend.background = element_rect(fill="grey95",
size=0.5, linetype="solid", colour ="grey95")) +
guides(fill=guide_legend(title="Clusters", nrow=clusn,byrow=TRUE))
cols <- colorRampPalette(brewer.pal(12, "Set3"))
myPal <- cols(clusn)
main <- ggplot(output, aes(years, value, fill = variable)) +
geom_area() +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = myPal) +
theme(legend.position = "bottom",
legend.text=element_text(size=12),
legend.title = element_blank(),
#axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
legend.background = element_rect(fill="grey95",
size=0.5, linetype="solid", colour ="grey95")) +
guides(fill=guide_legend(title="Clusters", nrow=clusn,byrow=TRUE))
main
View(output)
clust
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
# Get Names
names_col <- c()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust$name[clust$cluster == i]
tmp <- which(colnames(clust_centroids) %in% tmp)
tmp <- clust_centroids[,c(tmp)]
tmp <- as.data.frame(t(tmp))
tmp$name <- rownames(tmp)
tmp <- melt(tmp, id.vars = "name")
tmp <- tmp[order(tmp$value, decreasing = T),]
tmp <- unique(as.character(tmp$name[1:12]))
tmp <- paste0(tmp, collapse = " | ")
names_col <- c(names_col, tmp)
}
#Get Frequency Distrubtion
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
View(output)
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
View(clust)
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
View(output)
df= input_df
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
df = df[,c(1:101)]
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$bigram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
View(output)
class(input_df$X1815)
class(df$X1815)
View(df)
#### IMPORT BIGRAMS FOR EXTRACTION WORDS ####
df <- read.csv("bigrams_buitenlandsche.csv", sep = ",")
get_cluster <- function(clusn){
clust <- kmeans(matrix_df, clusn, nstart = 20)
clust_centroids = clust$centers
clust <- as.data.frame(clust$cluster)
clust$names <- rownames(matrix_df)
colnames(clust) <- c("cluster", "name")
clust$cluster <- as.numeric(clust$cluster)
# Get Names
names_col <- c()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust$name[clust$cluster == i]
tmp <- which(colnames(clust_centroids) %in% tmp)
tmp <- clust_centroids[,c(tmp)]
tmp <- as.data.frame(t(tmp))
tmp$name <- rownames(tmp)
tmp <- melt(tmp, id.vars = "name")
tmp <- tmp[order(tmp$value, decreasing = T),]
tmp <- unique(as.character(tmp$name[1:12]))
tmp <- paste0(tmp, collapse = " | ")
names_col <- c(names_col, tmp)
}
#Get Frequency Distrubtion
output <- data.frame(matrix(0,100,0))
for(i in seq(1,clusn,1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$ngram %in% tmp,])
names <- names_col[i]
cs <- as.data.frame(colSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
colnames(cs) <- names
output <- cbind(output, cs)
}
output$total <- rowSums(output)
for(i in seq(1,as.numeric(ncol(output)),1)){
output[,i] <- output[,i] / output$total * 100
}
output$total <- NULL
output$years <- as.numeric(gsub("X","", rownames(output)))
output <- melt(output, id.vars = "years")
output$years <- as.numeric(output$years)
output$value <- as.numeric(output$value)
# Get Distribution within clusters
list_of_plots <- list()
for(i in seq(1,as.numeric(length(unique(clust$cluster))),1)){
tmp <- clust[clust$cluster == i,]
tmp <- as.character(tmp$name)
tmp <- as.data.frame(df[df$ngram %in% tmp,])
cs <- as.data.frame(rowSums(tmp[,c(2:as.numeric(ncol(tmp)))]))
cs$words <- tmp$ngram
colnames(cs) <- c('rs', "ngram")
cs <- cs[order(cs$rs, decreasing = T),]
cs$rs <- round((cs$rs / sum(cs$rs) * 100),2)
#cs <- as.data.frame(cs[1,])
cs$clus <- i
cs$bigornot <- ""
for(row in 1:as.numeric(nrow(cs))){
if(cs$rs[row] > 5){cs$bigornot[row] <- as.character(cs$ngram[row])}
else{cs$bigornot[row] <- "small stuff"}
}
selection_words <- as.character(cs$ngram[cs$rs > 5])
#colours <- brewer.pal(as.numeric(length(unique(cs$bigornot))), "Accent")
p <- ggplot(cs[order(cs$rs, decreasing = T),], aes(x = clus, y = rs, fill = bigornot)) +
geom_col() +
#geom_text(aes(clus, rs, label=paste0(bigram, rs)), data = cs[cs$bigram %in% selection_words,]) +
theme_minimal(base_size = 16) +
ggtitle(paste0("Cluster ", i, " with ", nrow(tmp), " bigrams")) +
theme(axis.ticks.x = element_blank()) +
guides(fill=guide_legend(title="Words > 5% and Other"))
list_of_plots[[i]] <- p
}
cols <- colorRampPalette(brewer.pal(12, "Set3"))
myPal <- cols(clusn)
main <- ggplot(output, aes(years, value, fill = variable)) +
geom_area() +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = myPal) +
theme(legend.position = "bottom",
legend.text=element_text(size=12),
legend.title = element_blank(),
#axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
legend.background = element_rect(fill="grey95",
size=0.5, linetype="solid", colour ="grey95")) +
guides(fill=guide_legend(title="Clusters", nrow=clusn,byrow=TRUE))
list_of_plots[[(clusn + 1)]] <- main
list_of_plots
} # outputs a list of plots, the last one is the cluster plot, the other ones are cluster structure plots
list_plots <- get_cluster(8)
list_plots[[9]]
list_plots <- get_cluster(12)
get_plot(list_plots, "main")
list_plots[[13]]
list_plots[[3]]
list_plots[[4]]
list_plots[[1]]
list_plots[[2]]
list_plots[[3]]
list_plots[[4]]
list_plots[[5]]
list_plots[[6]]
clust
View(clust)
list_plots <- get_cluster(16)
get_plot(list_plots, "main")
list_plots[[17]]
list_plots <- get_cluster(8)
list_plots[[9]]
list_plots <- get_cluster(10)
list_plots[[11]]
list_plots <- get_cluster(12)
list_plots[[13]]
list_plots <- get_cluster(14)
list_plots[[15]]
list_words <- get_words(df, 50, model,5)
matrix_df <- get_distance_matrix(list_words, model)
list_plots <- get_cluster(12)
list_plots[[13]]
list_plots <- get_cluster(14)
list_plots[[15]]
list_plots <- get_cluster(16)
list_plots[[17]]
